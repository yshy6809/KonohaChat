plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.3.72'
    id 'application'
}

application{
    mainClassName("com.mrwhoami.qqservices.MainKt")
}

group 'com.mrwhoami'
version '1.0-SNAPSHOT'

repositories {
    maven { url 'https://dl.bintray.com/kotlin/kotlin-eap' }
    mavenCentral()
    jcenter()
}


dependencies {
    compile 'io.github.microutils:kotlin-logging:1.8.3'

    //compileOnly 'net.mamoe:mirai-core-qqandroid:' + project('CustomCore').version
    compile 'net.mamoe:mirai-core-qqandroid:1.3.0'
    //implementation "net.mamoe:mirai-core-qqandroid:VERSION"
    //compile 'net.mamoe:mirai-serialization:1.1.3'

    compile "org.jetbrains.kotlin:kotlin-stdlib"
    // https://mvnrepository.com/artifact/org.slf4j/slf4j-simple
    compile group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.29'
    compile 'com.beust:klaxon:5.0.1'
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin:2.11.2"

    compile group: 'net.dreamlu', name: 'mica-core', version: '2.0.6-GA'
    // https://mvnrepository.com/artifact/net.dreamlu/mica-http
    compile group: 'net.dreamlu', name: 'mica-http', version: '2.0.6-GA'

    //添加 httpclient 支持
    // https://mvnrepository.com/artifact/org.apache.httpcomponents/httpclient
    compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.7'

    //添加 jsoup 支持
    // https://mvnrepository.com/artifact/org.jsoup/jsoup
    compile group: 'org.jsoup', name: 'jsoup', version: '1.11.3'
    compile "org.projectlombok:lombok:1.18.4"

    // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.11'
    // https://mvnrepository.com/artifact/com.google.code.gson/gson
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.6'

    // https://mvnrepository.com/artifact/net.sf.json-lib/json-lib
    //compile group: 'net.sf.json-lib', name: 'json-lib', version: '2.4'

    implementation 'me.lovesasuna:Lanzou:1.3.3'

}

sourceSets {
    main.java.srcDirs += 'src/main/kotlin/'
    test.java.srcDirs += 'src/test/kotlin/'
}

jar {

String someString = ''

configurations.runtime.each {someString = someString + " lib\\"+it.name}
    manifest {
        attributes 'Main-Class': 'com.mrwhoami.qqservices.MainKt'
		attributes 'Class-Path': someString
    }
    // This line of code recursively collects and copies all of a project's files
    // and adds them to the JAR itself. One can extend this task, to skip certain
    // files or particular types at will
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } } {
        exclude 'META-INF/*.RSA', 'META-INF/*.SF', 'META-INF/*.DSA'
    }
}


 
task copyJar(type:Copy){

from configurations.runtime

into ('build/libs/lib')
}

 
//把JAR复制到目标目录

task release(type: Copy,dependsOn: [build,copyJar]) {

// from 'conf'

// into ('build/libs/eachend/conf') // 目标位置

}

